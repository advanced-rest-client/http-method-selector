{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A HTTP method selector. Displays list of radio buttons with common\nhttp methods and a dropdown with less common but still valid methods.\n\nUser can define his own methos whe selects \"custom\" option in the dropdown menu.\nBecause of this the element do not support validation of any kind and hosting\napplication should provide one if required.\n\n### Example\n\n```html\n<http-method-selector></http-method-selector>\n```\n\n### Styling\n`<http-method-selector>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--http-method-selector` | Mixin applied to the element | `{}`\n`--http-method-selector-dropdown` | Mixin applied to the dropdown field | `{}`\n`--http-method-selector-input` | Mixin applied to the custom input field | `{}`\n`--http-method-selector-custom-close-button` | Mixin applied to the custom input close button | `{}`\n`--from-row-action-icon-color` | Theme variable, color of the custom input close button | `--icon-button-color` or `rgba(0, 0, 0, 0.74)`\n`--from-row-action-icon-color-hover` | Theme variable, color of the custom input close button when hovering | `--accent-color` or `rgba(0, 0, 0, 0.74)`",
      "summary": "",
      "path": "http-method-selector.js",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "standardMethods",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "Currently selected HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_methodChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"GET\"",
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "isPayload",
          "type": "boolean | null | undefined",
          "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onIsPayloadChanged\"",
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "methodMenuOpened",
          "type": "boolean | null | undefined",
          "description": "Set to true when the user opens the dropdown menu",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "renderCustom",
          "type": "boolean | null | undefined",
          "description": "When set it allows to render a custom method selector",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "When set the editor is in read only mode.",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 77,
              "column": 5
            },
            "end": {
              "line": 82,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 98,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "_computeIsPayload",
          "description": "Compute if the tayload can carry a payload.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method"
            }
          ],
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "_onIsPayloadChanged",
          "description": "Handler for `isPayload` property change",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "_methodChanged",
          "description": "Handler for `method` property chnage",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "_isPayloadStatusHandler",
          "description": "Responds to an event requesting status check for `isPayload` propery by setting the `value`\nproperty on the event and canceling the event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "_methodChangedHandler",
          "description": "If the event source is not this element it will update the method value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "closeCustom",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "_dropdownMenuOpened",
          "description": "Checks if there is an empty method name and if it is it will set `renderCustom` property\nthat constrolls display of a custom method input.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened",
              "type": "Boolean"
            },
            {
              "name": "method",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 126,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.HttpMethodSelector",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "method",
          "description": "Currently selected HTTP method",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "is-payload",
          "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "method-menu-opened",
          "description": "Set to true when the user opens the dropdown menu",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "render-custom",
          "description": "When set it allows to render a custom method selector",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        },
        {
          "name": "readonly",
          "description": "When set the editor is in read only mode.",
          "sourceRange": {
            "file": "http-method-selector-mixin.js",
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcMixins.HttpMethodSelectorMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "http-method-selector",
      "mixins": [
        "EventsTargetMixin",
        "HttpMethodSelectorMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "A behavior to share common code between both method selectors.",
      "summary": "",
      "path": "http-method-selector-mixin.js",
      "properties": [
        {
          "name": "standardMethods",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "Currently selected HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_methodChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"GET\""
        },
        {
          "name": "isPayload",
          "type": "boolean | null | undefined",
          "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onIsPayloadChanged\"",
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "methodMenuOpened",
          "type": "boolean | null | undefined",
          "description": "Set to true when the user opens the dropdown menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "renderCustom",
          "type": "boolean | null | undefined",
          "description": "When set it allows to render a custom method selector",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "When set the editor is in read only mode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 98,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeIsPayload",
          "description": "Compute if the tayload can carry a payload.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method"
            }
          ]
        },
        {
          "name": "_onIsPayloadChanged",
          "description": "Handler for `isPayload` property change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_methodChanged",
          "description": "Handler for `method` property chnage",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isPayloadStatusHandler",
          "description": "Responds to an event requesting status check for `isPayload` propery by setting the `value`\nproperty on the event and canceling the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_methodChangedHandler",
          "description": "If the event source is not this element it will update the method value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "closeCustom",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dropdownMenuOpened",
          "description": "Checks if there is an empty method name and if it is it will set `renderCustom` property\nthat constrolls display of a custom method input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened",
              "type": "Boolean"
            },
            {
              "name": "method",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 7
        },
        "end": {
          "line": 205,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ArcMixins.HttpMethodSelectorMixin",
      "attributes": [
        {
          "name": "method",
          "description": "Currently selected HTTP method",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "is-payload",
          "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "method-menu-opened",
          "description": "Set to true when the user opens the dropdown menu",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "render-custom",
          "description": "When set it allows to render a custom method selector",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "When set the editor is in read only mode.",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
