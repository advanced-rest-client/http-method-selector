{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "ArcBehaviors",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "http-method-selector-mixin.html",
        "start": {
          "line": 22,
          "column": 2
        },
        "end": {
          "line": 22,
          "column": 27
        }
      },
      "mixins": [
        {
          "description": "A behavior to share common code between both method selectors.",
          "summary": "",
          "path": "http-method-selector-mixin.html",
          "properties": [
            {
              "name": "method",
              "type": "string",
              "description": "Currently selected HTTP method",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_methodChanged\""
                }
              },
              "defaultValue": "\"GET\""
            },
            {
              "name": "isPayload",
              "type": "boolean",
              "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 51,
                  "column": 8
                },
                "end": {
                  "line": 58,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_onIsPayloadChanged\"",
                  "readOnly": true
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "methodMenuOpened",
              "type": "boolean",
              "description": "Set to true when the user opens the dropdown menu",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 60,
                  "column": 8
                },
                "end": {
                  "line": 63,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "showCustom",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 65,
                  "column": 8
                },
                "end": {
                  "line": 68,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "_attachListeners",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 88,
                  "column": 4
                },
                "end": {
                  "line": 91,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                }
              ]
            },
            {
              "name": "_detachListeners",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 93,
                  "column": 4
                },
                "end": {
                  "line": 96,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                }
              ]
            },
            {
              "name": "_computeIsPayload",
              "description": "Compute if the tayload can carry a payload.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 99,
                  "column": 4
                },
                "end": {
                  "line": 101,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "method"
                }
              ]
            },
            {
              "name": "_onIsPayloadChanged",
              "description": "Handler for `isPayload` property change",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 104,
                  "column": 4
                },
                "end": {
                  "line": 116,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "_methodChanged",
              "description": "Handler for `method` property chnage",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 4
                },
                "end": {
                  "line": 130,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "method"
                }
              ]
            },
            {
              "name": "_isPayloadStatusHandler",
              "description": "Responds to an event requesting status check for `isPayload` propery by setting the `value`\nproperty on the event and canceling the event.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 135,
                  "column": 4
                },
                "end": {
                  "line": 142,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_methodChangedHandler",
              "description": "If the event source is not this element it will update the method value.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 146,
                  "column": 4
                },
                "end": {
                  "line": 153,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "closeCustom",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 155,
                  "column": 4
                },
                "end": {
                  "line": 158,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_dropdownMenuOpened",
              "description": "Checks if there is an empty method name and if it is it will set `showCustom` property\nthat constrolls display of a custom method input.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 164,
                  "column": 4
                },
                "end": {
                  "line": 180,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                },
                {
                  "name": "method"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 0
            },
            "end": {
              "line": 196,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "ArcBehaviors.HttpMethodSelectorMixin",
          "attributes": [
            {
              "name": "method",
              "description": "Currently selected HTTP method",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "is-payload",
              "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
              "sourceRange": {
                "start": {
                  "line": 51,
                  "column": 8
                },
                "end": {
                  "line": 58,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "method-menu-opened",
              "description": "Set to true when the user opens the dropdown menu",
              "sourceRange": {
                "start": {
                  "line": 60,
                  "column": 8
                },
                "end": {
                  "line": 63,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "show-custom",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 65,
                  "column": 8
                },
                "end": {
                  "line": 68,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "request-is-payload-changed",
              "description": "request-is-payload-changed",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "request-method-changed",
              "description": "request-method-changed",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ],
  "elements": [
    {
      "description": "A HTTP method selector. Displays list of radio buttons with common\nhttp methods and a dropdown with less common but still valid methods.\n\nUser can define his own methos whe selects \"custom\" option in the dropdown menu.\nBecause of this the element do not support validation of any kind and hosting\napplication should provide one if required.\n\n### Example\n\n```html\n<http-method-selector></http-method-selector>\n```\n\n### Styling\n`<http-method-selector>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--http-method-selector` | Mixin applied to the element | `{}`\n`--http-method-selector-dropdown` | Mixin applied to the dropdown field | `{}`\n`--http-method-selector-input` | Mixin applied to the custom input field | `{}`\n`--http-method-selector-custom-close-button` | Mixin applied to the custom input close button | `{}`\n`--from-row-action-icon-color` | Theme variable, color of the custom input close button | `--icon-button-color` or `rgba(0, 0, 0, 0.74)`\n`--from-row-action-icon-color-hover` | Theme variable, color of the custom input close button when hovering | `--accent-color` or `rgba(0, 0, 0, 0.74)`",
      "summary": "",
      "path": "http-method-selector.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\""
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "method",
          "type": "string",
          "description": "Currently selected HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 40,
              "column": 8
            },
            "end": {
              "line": 45,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_methodChanged\""
            }
          },
          "defaultValue": "\"GET\"",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "isPayload",
          "type": "boolean",
          "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 58,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onIsPayloadChanged\"",
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "methodMenuOpened",
          "type": "boolean",
          "description": "Set to true when the user opens the dropdown menu",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "showCustom",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 68,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_computeIsPayload",
          "description": "Compute if the tayload can carry a payload.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_onIsPayloadChanged",
          "description": "Handler for `isPayload` property change",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_methodChanged",
          "description": "Handler for `method` property chnage",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_isPayloadStatusHandler",
          "description": "Responds to an event requesting status check for `isPayload` propery by setting the `value`\nproperty on the event and canceling the event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_methodChangedHandler",
          "description": "If the event source is not this element it will update the method value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "closeCustom",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 158,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_dropdownMenuOpened",
          "description": "Checks if there is an empty method name and if it is it will set `showCustom` property\nthat constrolls display of a custom method input.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            },
            {
              "name": "method"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 113,
          "column": 2
        },
        "end": {
          "line": 115,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.HttpMethodSelector",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "method",
          "description": "Currently selected HTTP method",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 40,
              "column": 8
            },
            "end": {
              "line": 45,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "is-payload",
          "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 58,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "method-menu-opened",
          "description": "Set to true when the user opens the dropdown menu",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "show-custom",
          "description": "",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 68,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "request-is-payload-changed",
          "description": "request-is-payload-changed",
          "metadata": {},
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "type": "CustomEvent",
          "name": "request-method-changed",
          "description": "request-method-changed",
          "metadata": {},
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "http-method-selector",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.HttpMethodSelectorMixin"
      ]
    },
    {
      "description": "A HTTP method selector in a dropdown list of predefined HTTP methods.\n\n### Example\n\n```html\n<http-method-selector-mini></http-method-selector-mini>\n```\n\n### Styling\n\n`<http-method-selector>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--http-method-selector-mini` | Mixin applied to the element | `{}`\n`--http-method-selector-mini-dropdown-width` | Width of the dropdown field | `100px`\n`--http-method-selector-mini-input-width` | Width of the custom input field | `100px`\n`--http-method-selector-mini-dropdown` | Mixin applied to the dropdown field | `{}`\n`--http-method-selector-mini-input` | Mixin applied to the custom input field | `{}`\n`--http-method-selector-custom-close-button` | Mixin applied to the custom input close button | `{}`\n`--from-row-action-icon-color` | Theme variable, color of the custom input close button | `--icon-button-color` or `rgba(0, 0, 0, 0.74)`\n`--from-row-action-icon-color-hover` | Theme variable, color of the custom input close button when hovering | `--accent-color` or `rgba(0, 0, 0, 0.74)`",
      "summary": "",
      "path": "http-method-selector-mini.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\""
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "method",
          "type": "string",
          "description": "Currently selected HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 40,
              "column": 8
            },
            "end": {
              "line": 45,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_methodChanged\""
            }
          },
          "defaultValue": "\"GET\"",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "isPayload",
          "type": "boolean",
          "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 58,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onIsPayloadChanged\"",
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "methodMenuOpened",
          "type": "boolean",
          "description": "Set to true when the user opens the dropdown menu",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "showCustom",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 68,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_computeIsPayload",
          "description": "Compute if the tayload can carry a payload.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_onIsPayloadChanged",
          "description": "Handler for `isPayload` property change",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_methodChanged",
          "description": "Handler for `method` property chnage",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_isPayloadStatusHandler",
          "description": "Responds to an event requesting status check for `isPayload` propery by setting the `value`\nproperty on the event and canceling the event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_methodChangedHandler",
          "description": "If the event source is not this element it will update the method value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "closeCustom",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 158,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "_dropdownMenuOpened",
          "description": "Checks if there is an empty method name and if it is it will set `showCustom` property\nthat constrolls display of a custom method input.",
          "privacy": "protected",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            },
            {
              "name": "method"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 108,
          "column": 2
        },
        "end": {
          "line": 110,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.HttpMethodSelectorMini",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "method",
          "description": "Currently selected HTTP method",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 40,
              "column": 8
            },
            "end": {
              "line": 45,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "is-payload",
          "description": "True if the request for selected HTTP method can carry a payload. It\nis defined in HTTP spec.",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 58,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "method-menu-opened",
          "description": "Set to true when the user opens the dropdown menu",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "name": "show-custom",
          "description": "",
          "sourceRange": {
            "file": "http-method-selector-mixin.html",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 68,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "request-is-payload-changed",
          "description": "request-is-payload-changed",
          "metadata": {},
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        },
        {
          "type": "CustomEvent",
          "name": "request-method-changed",
          "description": "request-method-changed",
          "metadata": {},
          "inheritedFrom": "ArcBehaviors.HttpMethodSelectorMixin"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "http-method-selector-mini",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.HttpMethodSelectorMixin"
      ]
    }
  ]
}
